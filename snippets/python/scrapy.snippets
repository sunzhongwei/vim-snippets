snippet href
	a::attr(href)
snippet text
	a::text
#snippet img 
#    img::attr(src)
snippet css
	response.css('${0:title}').extract()
snippet parse_items
	for href in response.css("a::attr('href')"):
		url = response.urljoin(href.extract())
		yield scrapy.Request(url, callback=self.${0:parse_item})
#snippet parse_items_and_next
#	for href in response.css("a::attr('href')"):
#		url = response.urljoin(href.extract())
#		yield scrapy.Request(url, callback=self.${0:parse_item})
#	#next_page = response.css("li.next-page > a::attr('href')")
#    if next_page:
#        url = response.urljoin(next_page[0].extract())
#        yield scrapy.Request(url, self.parse_items)
snippet django_path
	import sys
	import os.path
	cur_dir = os.path.dirname(os.path.realpath(__file__))
	django_dir = os.path.join(cur_dir, "../../")
	sys.path.append(django_dir)
	import os
	os.environ['DJANGO_SETTINGS_MODULE'] = '${1:project_name}.settings'
snippet req_header
	DEFAULT_REQUEST_HEADERS = {
		'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/34.0.1847.116 Safari/537.36',
		"Connection": "keep-alive",
		'Accept-Encoding': 'deflate',
	    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
	    'Accept-Language': 'en',
	}
snippet req
	yield scrapy.Request(url, callback=self.${0:parse_item})
	
